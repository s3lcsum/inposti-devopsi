# Default values for Spring Boot API
# This is a YAML-formatted file.

# Environment configuration
environment: dev
springProfile: dev

# Replica count (3 for dev, 5 for prd)
replicaCount: 3

# Container image
image:
  repository: busybox
  tag: "stable"
  pullPolicy: IfNotPresent

# Service account
serviceAccount:
  create: true
  automount: true

# Pod annotations (for checksum injection)
podAnnotations: {}

# Pod labels
podLabels: {}

# Security context
podSecurityContext: {}
securityContext: {}

# Service configuration
service:
  type: ClusterIP
  ports:
    - name: api
      port: 8080
      targetPort: 8080
    - name: logs
      port: 8081
      targetPort: 8081
    - name: soap
      port: 8082
      targetPort: 8082

# Ingress configuration
ingress:
  enabled: false
  className: ""
  annotations: {}
  hosts:
    - host: chart-example.local
      paths:
        - path: /
          pathType: ImplementationSpecific
  tls: []

# Resource allocation
resources:
  requests:
    cpu: 100m
    memory: 128Mi
  limits:
    cpu: 500m
    memory: 512Mi

# Health checks (TCP on port 8080)
livenessProbe:
  tcpSocket:
    port: 8080
  initialDelaySeconds: 30
  periodSeconds: 10
  timeoutSeconds: 5
  failureThreshold: 3

readinessProbe:
  tcpSocket:
    port: 8080
  initialDelaySeconds: 5
  periodSeconds: 5
  timeoutSeconds: 3
  failureThreshold: 3

# Rolling update strategy (zero downtime)
strategy:
  type: RollingUpdate
  rollingUpdate:
    maxSurge: 1
    maxUnavailable: 0

# Container ports
ports:
  - name: api
    containerPort: 8080
    protocol: TCP
  - name: logs
    containerPort: 8081
    protocol: TCP
  - name: soap
    containerPort: 8082
    protocol: TCP

# Pre-stop hook
preStopHook:
  command:
    - /bin/sh
    - -c
    - "wget http://localhost:8080/service/shutdown"

# ConfigMap with sample JSON
configMap:
  enabled: true
  data:
    config.json: |
      {
        "application": {
          "name": "spring-boot-api",
          "version": "1.0.0"
        },
        "database": {
          "url": "jdbc:postgresql://localhost:5432/appdb",
          "pool": {
            "initialSize": 5,
            "maxSize": 20
          }
        },
        "logging": {
          "level": "INFO",
          "pattern": "%d{yyyy-MM-dd HH:mm:ss} - %msg%n"
        },
        "security": {
          "enabled": true,
          "jwt": {
            "secret": "your-secret-key",
            "expiration": 3600
          }
        }
      }

# Secret with randomly generated key-values
secret:
  enabled: true
  data:
    DB_PASSWORD: "{{ randAlphaNum 32 }}"
    JWT_SECRET: "{{ randAlphaNum 64 }}"
    API_KEY: "{{ randAlphaNum 24 }}"
    ENCRYPTION_KEY: "{{ randAlphaNum 32 }}"

# Node selector, tolerations, affinity
nodeSelector: {}
tolerations: []
affinity: {}
